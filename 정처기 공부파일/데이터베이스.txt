데이터베이스 설계 순서\ 개념적 설계 -> 논리적 설계 -> 물리적 설계 -> 구현
개념적 설계\ 정보 모델링, 트렌젝션 모델링, 개념 스키마 설계, ERD
논리적 설계\데이터 모델링, 트렌젝션 인터페이스 설계, 테이블 설계, 논리 스키마 설계
물리적 설계\레코드 양식 설계, 저장 구조 및 액세스 경로 설정
구현\ 트랜젝션 작성

관계형 데이터베이스 언어\ RA
relation\테이블
Attribute\열=필드
차수=Degree\열의 수
Tuple\행=레코드
Cadinality\행들의 수 튜플의 수
Domain\한 애트리뷰트에서 나타낼 수 있는 값들의 집합(원자값)
Schema\ 릴레이션 이름과 애트리뷰트들의 집합= 내포 Intension
Instance\ 릴레이션의 어느 시점에 들어있는 튜플들의 집합

ERD란?\ 데이터를 개체(entity), 관계(Relationship), 속성(Attribute)로 묘사
후보키\ 튜플이 유일하게 식별, 기본키로 사용 가능, 유일성 최소성 만족
기본키PK\ 한 릴레이션에서 특정 튜플을 유일하게 구별할 수 있는 속성
대체키\ 후보키가 둘 이상일 때 기본키를 제외한 나머지 후보키
슈퍼키\속성들의 집합으로 구성, 유일성 만족, 최소성 불만족(후보키에서 불필요한 데이터가 좀 더해짐)
외래키\ 다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합

개체 무결성\기본키 값의 속성 값이 널 값이 아닌 원자성을 가짐
도메인 무결성\릴레이션 내의 튜플들이 각 속성의 도메인에 지정된 값만을 가져야 함.
참조 무결성\외래키 값은 null이거나 참조 릴레이션의 기본키 값과 동일해야함.
사용자 정의 무결성\ 속성 값들이 사용자가 정의한 제약 조건에 만족해야함

정규화\ 데이터 구조의 안정성 및 무결성, 효과적인 검색 알고리즘, 데이터 중복 배체, 이상 발생 방지를 위해 DB 스키마를 가공하는 행위
이상(Anomaly)\데이터가 불필요하게 중복되어 릴레이션 조작 시 예기치 못한 곤란한 현상이 발생하는 것.
삽입 이상\ 원하지 않는 값도 함께 삽입
삭제 이상\ 의도와 상관없는 값도 함계 삭제
갱신 이상\ 속성 값 갱신 시 일부 튜플의 정보만 갱신되며 정보에 모순 발생

제1정규화\도메인이 원자값이어야함
제2정규화\부분적 함수 종속 제거
제3정규화\이행적 함수 종속 제거
BCNF\결정자이면서 후보키 아닌 것 제거
제4정규화\다치 종속 제거
제5정규화\조인 종속성 이용

데이터베이스 언어\DDL, DML, DCL
DDL\CREATE, ALTER, DROP
DML\SELECT-FROM-WHERE INSERT-INTO-VALUES DELETE-FROM-WHERE UPDATE-SET-WHERE
DCL\COMMOT, ROBACK, GRANT-TO REVOKE-FROM

트랜젝션\Atomicity Contsistency Isolation Durability
Atomicity 원자성\ 중간값이 없음. 완료 되거나 반영되지 않게 복구
Consistency 지속성\고정요소는 수행 전후가 같아야 한다
Isolation 격리성\트랜젝션 실행 시 다른 트랜젝션의 간섭을 받지 X
Durability\ 완료 결과가 DB에 영구히 기록됨.
